{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ict-27\\\\Documents\\\\GitHub\\\\ModuERP-main_test\\\\front\\\\src\\\\Views\\\\Subfolder\\\\admin\\\\index.js\",\n  _s = $RefreshSig$();\n// front/src/Views/subfolder/admin/index.js\n\nimport React, { useState, useEffect } from 'react';\nimport { Chart, registerables } from 'chart.js';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst Admin = () => {\n  _s();\n  const [data, setData] = useState({\n    active: 0,\n    inactive: 0\n  });\n  const chartRef = React.useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/member-stats');\n        const result = await response.json();\n        setData({\n          active: result.active,\n          inactive: result.inactive\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const intervalId = setInterval(fetchData, 24 * 60 * 60 * 1000); // 1일마다\n\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n\n    // 기존 차트 삭제\n    if (ctx.chart) {\n      ctx.chart.destroy();\n    }\n    const chart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Active Members', 'Inactive Members'],\n        datasets: [{\n          label: 'Members',\n          data: [data.active, data.inactive],\n          backgroundColor: ['#36A2EB', '#FF6384'],\n          borderColor: ['#36A2EB', '#FF6384'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: false // 범례 숨기기\n          },\n\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                let label = context.dataset.label || '';\n                if (label) {\n                  label += ': ';\n                }\n                if (context.parsed.y !== null) {\n                  label += new Intl.NumberFormat().format(context.parsed.y);\n                }\n                return label;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            beginAtZero: true,\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              borderDash: [5, 5]\n            }\n          }\n        }\n      }\n    });\n\n    // 차트 인스턴스를 ctx에 저장\n    ctx.chart = chart;\n    return () => {\n      // 컴포넌트 언마운트 시 차트 제거\n      chart.destroy();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Member Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"memberChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"AitZc3IRFEXrdP74FLp5oVn0Duw=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","Chart","registerables","jsxDEV","_jsxDEV","register","Admin","_s","data","setData","active","inactive","chartRef","useRef","fetchData","response","fetch","result","json","error","console","intervalId","setInterval","clearInterval","ctx","current","getContext","chart","destroy","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","display","tooltip","callbacks","context","dataset","parsed","y","Intl","NumberFormat","format","scales","x","beginAtZero","grid","borderDash","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","id","_c","$RefreshReg$"],"sources":["C:/Users/ict-27/Documents/GitHub/ModuERP-main_test/front/src/Views/Subfolder/admin/index.js"],"sourcesContent":["// front/src/Views/subfolder/admin/index.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport './style.css';\r\n\r\nChart.register(...registerables);\r\n\r\nconst Admin = () => {\r\n  const [data, setData] = useState({ active: 0, inactive: 0 });\r\n  const chartRef = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('/api/member-stats');\r\n        const result = await response.json();\r\n        setData({ active: result.active, inactive: result.inactive });\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    const intervalId = setInterval(fetchData, 24 * 60 * 60 * 1000); // 1일마다\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    // 기존 차트 삭제\r\n    if (ctx.chart) {\r\n      ctx.chart.destroy();\r\n    }\r\n\r\n    const chart = new Chart(ctx, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: ['Active Members', 'Inactive Members'],\r\n        datasets: [{\r\n          label: 'Members',\r\n          data: [data.active, data.inactive],\r\n          backgroundColor: ['#36A2EB', '#FF6384'],\r\n          borderColor: ['#36A2EB', '#FF6384'],\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            display: false, // 범례 숨기기\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(context) {\r\n                let label = context.dataset.label || '';\r\n                if (label) {\r\n                  label += ': ';\r\n                }\r\n                if (context.parsed.y !== null) {\r\n                  label += new Intl.NumberFormat().format(context.parsed.y);\r\n                }\r\n                return label;\r\n              }\r\n            }\r\n          }\r\n        },\r\n        scales: {\r\n          x: {\r\n            beginAtZero: true,\r\n            grid: {\r\n              display: false\r\n            }\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            grid: {\r\n              borderDash: [5, 5]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // 차트 인스턴스를 ctx에 저장\r\n    ctx.chart = chart;\r\n\r\n    return () => {\r\n      // 컴포넌트 언마운트 시 차트 제거\r\n      chart.destroy();\r\n    };\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2>Member Statistics</h2>\r\n      <div className=\"chart-container\">\r\n        <canvas ref={chartRef} id=\"memberChart\"></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}